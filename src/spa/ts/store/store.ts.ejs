import { ActionTree, GetterTree, Module, MutationTree } from "vuex";
import { IAppState } from "./app.store";

export interface I<%= changeCase.pascalCase(name) %>State { } // tslint:disable-line:no-empty-interface

export type exampleAction = (payload: string) => Promise<void>;

export const <%= changeCase.camelCase(name) %>Store: Module<I<%= changeCase.pascalCase(name) %>State, IAppState> = {
  namespaced: true,
  state: {
    // State
  } as IAuthState,
  actions: {
    exampleAction: (({ commit, dispatch }, payload: string)): Promise<void> => {
      return new Promise((resolve, reject) => {
        resolve();
      }
    }
  } as ActionTree<I<%= changeCase.pascalCase(name) %>State, IAppState>,
  mutations: {
    setValue: (state, payload: string) => {
      // state.value = payload;
    },
  } as MutationTree<I<%= changeCase.pascalCase(name) %>State>,
  getters: {
    getEditMode: (state): string => {
      // return state.value;
    },
  } as GetterTree<I<%= changeCase.pascalCase(name) %>State, IAppState>,
}