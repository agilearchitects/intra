version: 2.1
executors:
  build:
    parameters:
      working_directory:
        type: string
        default: "~/build"
    docker:
      - image: circleci/node:12.3.1
    working_directory: << parameters.working_directory >>
  deploy:
    parameters:
      working_directory:
        type: string
        default: "~/build"
    machine:
      enabled: true
    working_directory: << parameters.working_directory >>
commands:
  build:
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ checksum "yarn.lock" }}
      - run:
          name: install
          command: yarn
      - save_cache:
          key: cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: build
          command: yarn build
      - run:
          name: build-migrations
          command: yarn build-migrations
      - persist_to_workspace:
          root: ./
          paths:
            - build
            - node_modules
            - storage/email-templates
  deploy:
    parameters:
      environment:
        type: enum
        enum: [production, staging, develop]
        default: develop
      fingerprint:
        type: string
        default: $FINGERPRINT
      key_filename:
        type: string
        default: $KEY_FILENAME
      ssh_connection:
        type: string
        default: $SSH_CONNECTION
      deploy_directory:
        type: string
        default: $DEPLOY_PATH
      working_directory:
        type: string
        default: "~/build"
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
      - run:
          name: Deploy over SSH
          command: |
            ssh -i ~/.ssh/<< parameters.key_filename >> << parameters.ssh_connection >> 'mkdir << parameters.deploy_directory >>/<< parameters.environment >>/storage -p'
            rsync -i ~/.ssh/<< parameters.key_filename >> -r << parameters.working_directory >>/build << parameters.working_directory >>/node_modules << parameters.ssh_connection >>:<< parameters.deploy_directory >>/<< parameters.environment >>
            rsync -i ~/.ssh/<< parameters.key_filename >> -r << parameters.working_directory >>/storage/email-templates/*.ejs << parameters.ssh_connection >>:<< parameters.deploy_directory >>/<< parameters.environment >>/storage/email-templates
jobs:
  build:
    executor:
      name: build
    steps:
      - build
  deploy-develop:
    executor:
      name: deploy
    steps:
      - deploy:
          environment: develop
  deploy-staging:
    executor:
      name: deploy
    steps:
      - deploy:
          environment: staging
  deploy-production:
    executor:
      name: deploy
    steps:
      - deploy:
          environment: production
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - deploy-develop:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: /^releases\/.+$/
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master